{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1008.15138",
      "templateHash": "200204742737849016"
    }
  },
  "parameters": {
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "rg-prod-eus-corpnetwork"
    },
    "assignmentName": {
      "type": "string",
      "defaultValue": "EUS-Network-Config"
    },
    "location": {
      "type": "string",
      "defaultValue": "eastus"
    },
    "transitVnetId": {
      "type": "string",
      "defaultValue": ""
    },
    "managedIdentityId": {
      "type": "string",
      "defaultValue": ""
    }
  },
  "functions": [],
  "variables": {
    "managementGroupName": "[managementGroup().name]",
    "routes": "[json('[\r\n    {\r\n        \"name\": \"rt-prod-eus-transit\",\r\n        \"location\": \"eastus\",\r\n        \"routes\": [\r\n            {\r\n                \"name\": \"upper-route-to-firewall\",\r\n                \"properties\": {\r\n                    \"addressPrefix\": \"0.0.0.0/1\",\r\n                    \"nextHopIpAddress\": \"10.100.0.4\",\r\n                    \"nextHopType\": \"VirtualAppliance\"\r\n                }\r\n            },\r\n            {\r\n                \"name\": \"lower-route-to-firewall\",\r\n                \"properties\": {\r\n                    \"addressPrefix\": \"128.0.0.0/1\",\r\n                    \"nextHopIpAddress\": \"10.100.0.4\",\r\n                    \"nextHopType\": \"VirtualAppliance\"\r\n                }\r\n            },\r\n            {\r\n                \"name\": \"application-gateway-route\",\r\n                \"properties\": {\r\n                    \"addressPrefix\": \"GatewayManager.EastUS\",\r\n                    \"nextHopType\": \"Internet\"\r\n                }\r\n            }                     \r\n        ]\r\n    }\r\n]\r\n')]",
    "nsgs": "[json('[\r\n    {\r\n        \"name\": \"nsg-prod-eus-transit\",\r\n        \"location\": \"eastus\",\r\n        \"securityRules\": [\r\n            {\r\n                \"name\": \"allow_AADDS_Inbound\",\r\n                \"properties\": {\r\n                    \"protocol\": \"*\",\r\n                    \"sourcePortRange\": \"*\",\r\n                    \"destinationPortRange\": \"*\",\r\n                    \"sourceAddressPrefix\": \"\",\r\n                    \"destinationAddressPrefix\": \"*\",\r\n                    \"access\": \"Allow\",\r\n                    \"priority\": 4093,\r\n                    \"direction\": \"Inbound\",\r\n                    \"sourcePortRanges\": [],\r\n                    \"destinationPortRanges\": [],\r\n                    \"sourceAddressPrefixes\": [ \"10.100.2.4\", \"10.100.2.5\" ],\r\n                    \"destinationAddressPrefixes\": []\r\n                }\r\n            },\r\n            {\r\n                \"name\": \"allow_AzureSQL_Inbound\",\r\n                \"properties\": {\r\n                    \"protocol\": \"TCP\",\r\n                    \"sourcePortRange\": \"*\",\r\n                    \"destinationPortRange\": \"\",\r\n                    \"sourceAddressPrefix\": \"SqlManagement\",\r\n                    \"destinationAddressPrefix\": \"*\",\r\n                    \"access\": \"Allow\",\r\n                    \"priority\": 4094,\r\n                    \"direction\": \"Inbound\",\r\n                    \"sourcePortRanges\": [],\r\n                    \"destinationPortRanges\": [\r\n                        9000, 9003, 1438, 1440, 1452\r\n                    ],\r\n                    \"sourceAddressPrefixes\": [],\r\n                    \"destinationAddressPrefixes\": []\r\n                }\r\n            },\r\n            {\r\n                \"name\": \"allow_AzureLoadBalancer_Inbound\",\r\n                \"properties\": {\r\n                    \"protocol\": \"*\",\r\n                    \"sourcePortRange\": \"*\",\r\n                    \"destinationPortRange\": \"*\",\r\n                    \"sourceAddressPrefix\": \"AzureLoadBalancer\",\r\n                    \"destinationAddressPrefix\": \"*\",\r\n                    \"access\": \"Allow\",\r\n                    \"priority\": 4095,\r\n                    \"direction\": \"Inbound\",\r\n                    \"sourcePortRanges\": [],\r\n                    \"destinationPortRanges\": [],\r\n                    \"sourceAddressPrefixes\": [],\r\n                    \"destinationAddressPrefixes\": []\r\n                }\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n')]",
    "tags": "[json('{\r\n    \"Application\": \"Azure Platform Operations\",\r\n    \"Application Owner\": \"Azure Platform Team\",\r\n    \"Cost Center\": \"04152010\",\r\n    \"Contact Email\": \"az-platformops@contoso.com\",\r\n    \"Data Classification\": \"Internal\",\r\n    \"Recovery Tier\": \"Tier 1\"\r\n}')]",
    "dnsServers": "[json('[\r\n    \"10.100.0.4\"\r\n]')]",
    "description": "[format('{0} - Deploy corporate network policies', toUpper(parameters('location')))]",
    "policyName": "[format('{0}-Network', toUpper(parameters('location')))]",
    "nonCompliance": "Deploy corporate NSG, route table, DNS, and VNet peering."
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "create-NetworkAppend-policy",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "description": {
            "value": "[variables('description')]"
          },
          "policyName": {
            "value": "[variables('policyName')]"
          },
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "routeTables": {
            "value": "[variables('routes')]"
          },
          "nsgList": {
            "value": "[variables('nsgs')]"
          },
          "dnsServers": {
            "value": "[variables('dnsServers')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "managementGroup": {
            "value": "[variables('managementGroupName')]"
          },
          "transitVnetId": {
            "value": "[parameters('transitVnetId')]"
          },
          "identityResourceId": {
            "value": "[parameters('managedIdentityId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "17914400854835639888"
            }
          },
          "parameters": {
            "mode": {
              "type": "string",
              "defaultValue": "All"
            },
            "description": {
              "type": "string"
            },
            "policyName": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "routeTables": {
              "type": "array"
            },
            "nsgList": {
              "type": "array"
            },
            "location": {
              "type": "string"
            },
            "transitVnetId": {
              "type": "string"
            },
            "managementGroup": {
              "type": "string"
            },
            "dnsServers": {
              "type": "array"
            },
            "identityResourceId": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "locationUpper": "[toUpper(parameters('location'))]",
            "locationShortName": "[replace(replace(replace(replace(replace(variables('locationUpper'), 'EAST', 'E'), 'WEST', 'W'), 'NORTH', 'N'), 'SOUTH', 'S'), 'CENTRAL', 'C')]",
            "deploymentName": "[format('NSG-and-Route-Policy-{0}', variables('locationUpper'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyDefinitions",
              "apiVersion": "2020-09-01",
              "name": "[parameters('policyName')]",
              "properties": {
                "description": "[parameters('description')]",
                "displayName": "[parameters('description')]",
                "mode": "[parameters('mode')]",
                "policyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Resources/subscriptions"
                      }
                    ]
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "deploymentScope": "subscription",
                      "existenceScope": "resourceGroup",
                      "resourceGroupName": "[parameters('resourceGroupName')]",
                      "type": "Microsoft.Network/routeTables",
                      "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                      ],
                      "deployment": {
                        "location": "[parameters('location')]",
                        "properties": {
                          "mode": "incremental",
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "location": {
                                "type": "string"
                              },
                              "routeTables": {
                                "type": "array"
                              },
                              "nsgList": {
                                "type": "array"
                              }
                            },
                            "resources": [
                              {
                                "name": "[parameters('resourceGroupName')]",
                                "type": "Microsoft.Resources/resourceGroups",
                                "apiVersion": "2021-04-01",
                                "location": "[[parameters('location')]",
                                "dependsOn": [],
                                "tags": "[parameters('tags')]"
                              },
                              {
                                "type": "Microsoft.Resources/deployments",
                                "apiVersion": "2019-10-01",
                                "name": "[variables('deploymentName')]",
                                "resourceGroup": "[parameters('resourceGroupName')]",
                                "properties": {
                                  "expressionEvaluationOptions": {
                                    "scope": "inner"
                                  },
                                  "mode": "Incremental",
                                  "parameters": {
                                    "routeTables": {
                                      "value": "[[parameters('routeTables')]"
                                    },
                                    "nsgList": {
                                      "value": "[[parameters('nsgList')]"
                                    }
                                  },
                                  "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                      "routeTables": {
                                        "type": "array"
                                      },
                                      "nsgList": {
                                        "type": "array"
                                      }
                                    },
                                    "functions": [],
                                    "resources": [
                                      {
                                        "copy": {
                                          "name": "rt",
                                          "count": "[[length(parameters('routeTables'))]"
                                        },
                                        "type": "Microsoft.Network/routeTables",
                                        "apiVersion": "2021-02-01",
                                        "name": "[[parameters('routeTables')[copyIndex()].name]",
                                        "location": "[[parameters('routeTables')[copyIndex()].location]",
                                        "properties": {
                                          "disableBgpRoutePropagation": true,
                                          "routes": "[[parameters('routeTables')[copyIndex()].routes]"
                                        }
                                      },
                                      {
                                        "copy": {
                                          "name": "nsgs",
                                          "count": "[[length(parameters('nsgList'))]"
                                        },
                                        "type": "Microsoft.Network/networkSecurityGroups",
                                        "apiVersion": "2021-02-01",
                                        "name": "[[parameters('nsgList')[copyIndex()].name]",
                                        "location": "[[parameters('nsgList')[copyIndex()].location]",
                                        "properties": {
                                          "securityRules": "[[parameters('nsgList')[copyIndex()].securityRules]"
                                        }
                                      }
                                    ],
                                    "outputs": {
                                      "nsgPolicyParam": {
                                        "type": "object",
                                        "value": {
                                          "[[reference(resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgList')[0].name), '2021-02-01', 'full').location]": {
                                            "id": "[[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgList')[0].name)]"
                                          },
                                          "disabled": {
                                            "id": ""
                                          }
                                        }
                                      },
                                      "routePolicyParam": {
                                        "type": "object",
                                        "value": {
                                          "[[reference(resourceId('Microsoft.Network/routeTables', parameters('routeTables')[0].name), '2021-02-01', 'full').location]": {
                                            "id": "[[resourceId('Microsoft.Network/routeTables', parameters('routeTables')[0].name)]"
                                          },
                                          "disabled": {
                                            "id": ""
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "dependsOn": [
                                  "[parameters('resourceGroupName')]"
                                ]
                              },
                              {
                                "type": "Microsoft.Authorization/policyAssignments",
                                "apiVersion": "2021-06-01",
                                "dependsOn": [],
                                "name": "[format('{0}-Network-Config', variables('locationShortName'))]",
                                "identity": {
                                  "type": "UserAssigned",
                                  "userAssignedIdentities": {
                                    "[format('{0}', parameters('identityResourceId'))]": {}
                                  }
                                },
                                "location": "[parameters('location')]",
                                "properties": {
                                  "description": "[format('{0} - Subscription network configuration', variables('locationUpper'))]",
                                  "displayName": "[format('{0} - Subscription network configuration', variables('locationUpper'))]",
                                  "policyDefinitionId": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/Microsoft.Authorization/policySetDefinitions/Network-Configuration', parameters('managementGroup'))]",
                                  "enforcementMode": "Default",
                                  "parameters": {
                                    "dns": {
                                      "value": "[parameters('dnsServers')]"
                                    },
                                    "routeTable": {
                                      "value": "[format('[reference(concat(subscription().id, ''/resourceGroups/'', ''{0}'', ''/providers/Microsoft.Resources/deployments/'', ''{1}''), ''2019-10-01'').outputs.routePolicyParam.value]', parameters('resourceGroupName'), variables('deploymentName'))]"
                                    },
                                    "nsg": {
                                      "value": "[format('[reference(concat(subscription().id, ''/resourceGroups/'', ''{0}'', ''/providers/Microsoft.Resources/deployments/'', ''{1}''), ''2019-10-01'').outputs.nsgPolicyParam.value]', parameters('resourceGroupName'), variables('deploymentName'))]"
                                    },
                                    "location": {
                                      "value": "[parameters('location')]"
                                    },
                                    "transitVnetId": {
                                      "value": "[parameters('transitVnetId')]"
                                    }
                                  },
                                  "notScopes": "",
                                  "nonComplianceMessages": [
                                    {
                                      "message": "Corporate network configuration"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "parameters": {
                            "routeTables": {
                              "value": "[parameters('routeTables')]"
                            },
                            "nsgList": {
                              "value": "[parameters('nsgList')]"
                            },
                            "location": {
                              "value": "[parameters('location')]"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "parameters": {}
              }
            }
          ],
          "outputs": {
            "policyId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "waitForPolicy",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "1980339873671539469"
            }
          },
          "parameters": {
            "time": {
              "type": "string",
              "defaultValue": "[utcNow()]"
            }
          },
          "functions": [],
          "variables": {
            "uniqueName": "[guid(parameters('time'))]"
          },
          "resources": [
            {
              "copy": {
                "name": "delayLoop",
                "count": "[length(range(0, 10))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('{0}-{1}', variables('uniqueName'), range(0, 10)[copyIndex()])]",
              "location": "[deployment().location]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {},
                  "resources": [],
                  "outputs": {}
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'create-NetworkAppend-policy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "uai-assignPolicy",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "identityResourceId": {
            "value": "[parameters('managedIdentityId')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "nonComplianceMessage": {
            "value": "[variables('nonCompliance')]"
          },
          "policyAssignmentEnforcementMode": {
            "value": "Default"
          },
          "policyAssignmentName": {
            "value": "[parameters('assignmentName')]"
          },
          "policyDefinitionId": {
            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'create-NetworkAppend-policy'), '2020-06-01').outputs.policyId.value]"
          },
          "policyDescription": {
            "value": "[variables('description')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "14866808741193360290"
            }
          },
          "parameters": {
            "policyAssignmentEnforcementMode": {
              "type": "string",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Input will determine if the policyAssignment should be enforced or not."
              }
            },
            "policyDefinitionId": {
              "type": "string"
            },
            "policyAssignmentName": {
              "type": "string"
            },
            "policyDescription": {
              "type": "string"
            },
            "policyParameters": {
              "type": "object",
              "defaultValue": {}
            },
            "exclusions": {
              "type": "array",
              "defaultValue": []
            },
            "nonComplianceMessage": {
              "type": "string"
            },
            "identityResourceId": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2021-06-01",
              "name": "[parameters('policyAssignmentName')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('identityResourceId'))]": {}
                }
              },
              "location": "[parameters('location')]",
              "properties": {
                "description": "[parameters('policyDescription')]",
                "displayName": "[parameters('policyDescription')]",
                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                "enforcementMode": "[parameters('policyAssignmentEnforcementMode')]",
                "parameters": "[parameters('policyParameters')]",
                "notScopes": "[parameters('exclusions')]",
                "nonComplianceMessages": [
                  {
                    "message": "[parameters('nonComplianceMessage')]"
                  }
                ]
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'create-NetworkAppend-policy')]",
        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'waitForPolicy')]"
      ]
    }
  ]
}